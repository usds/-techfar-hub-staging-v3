{"version":3,"file":"component---1192606314-tudy-challenge-small-agency-legacy-application-migration-mdx-6f571156dfa0eb56f521.js","mappings":"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","sources":["webpack://tech-far-hub/./content/resources/case-studies/case-study-challenge-small-agency-legacy-application-migration.mdx","webpack://tech-far-hub/./src/pages/template-default.tsx","webpack://tech-far-hub/./src/components/resources.tsx","webpack://tech-far-hub/./src/components/tag-list.tsx","webpack://tech-far-hub/./src/components/page-layout-nav.tsx","webpack://tech-far-hub/./node_modules/lodash/kebabCase.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  return React.createElement(React.Fragment);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/techfar-hub-website-v3/techfar-hub-website-v3/tech-far-hub/content/resources/case-studies/case-study-challenge-small-agency-legacy-application-migration.mdx\";\nimport * as React from \"react\";\nimport SiteLayout from \"../components/site-layout\";\nimport MDXContent from \"../components/mdxcontent\";\nimport {SEO} from \"../components/seo\";\nimport PageLayoutNav from \"../components/page-layout-nav\";\nconst DefaultPageTemplate = _ref => {\n  let {data, children, pageContext} = _ref;\n  if (data.currentPage.frontmatter && data.siblings && data.currentPage.tableOfContents) {\n    return React.createElement(PageLayoutNav, {\n      frontmatter: data.currentPage.frontmatter,\n      siblings: data.siblings,\n      tableOfContents: data.currentPage.tableOfContents,\n      pageContext: pageContext,\n      useNextLink: false\n    }, React.createElement(MDXContent, null, children));\n  }\n  return React.createElement(SiteLayout, {\n    pagePath: pageContext.pagePath\n  }, React.createElement(\"h1\", null, \"Something went wrong\"));\n};\nDefaultPageTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(DefaultPageTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const Head = _ref2 => {\n  var _data$currentPage;\n  let {data} = _ref2;\n  return React.createElement(SEO, {\n    frontmatter: (_data$currentPage = data.currentPage) === null || _data$currentPage === void 0 ? void 0 : _data$currentPage.frontmatter\n  });\n};\nconst query = \"2911962555\";\n","import React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { CardGroup } from \"@trussworks/react-uswds\";\nimport ResourceCard from \"./resouces-card\";\nconst Resources = () => {\n  const data: Queries.ResourcePromosQuery = useStaticQuery(graphql`\n    query ResourcePromos {\n      allMarkdownRemark(\n        filter: { fileAbsolutePath: { regex: \"/.*/promos/resources/.*/\" }, frontmatter: { visible: { eq: true } } }\n        sort: { frontmatter: { nav_weight: ASC } }\n      ) {\n        edges {\n          node {\n            id\n            html\n            parent {\n              id\n              ... on File {\n                id\n                name\n                base\n                relativeDirectory\n                relativePath\n              }\n            }\n            frontmatter {\n              heading\n              link\n            }\n          }\n        }\n      }\n    }\n  `);\n  return (\n    <CardGroup>\n      {data.allMarkdownRemark.edges.map(({ node }) => {\n        return <ResourceCard node={node} key={node.id}></ResourceCard>;\n      })}\n    </CardGroup>\n  );\n};\n\nexport default Resources;\n","import { withPrefix } from \"gatsby\";\nimport _ from \"lodash\";\nimport * as React from \"react\";\nimport { Hyperlink } from \"./hyperlink\";\n\nexport const TagList = ({ tags }: { tags: readonly (string | null)[] }): JSX.Element | null => {\n  if (tags && tags.length) {\n    const tagList = tags.map((tag) => {\n      if (tag) {\n        const urlTag = withPrefix(`/tags/${_.kebabCase(tag)}`);\n        return (\n          <Hyperlink href={urlTag} key={`tag-${tag}`}>\n            {tag}\n          </Hyperlink>\n        );\n      }\n    });\n    return (\n      <div className=\"tfh-tagBox\">\n        <h4>Tags</h4>\n        {tagList}\n      </div>\n    );\n  }\n  return null;\n};\n","import { Grid, SideNav } from \"@trussworks/react-uswds\";\nimport { graphql, Link } from \"gatsby\";\nimport * as React from \"react\";\nimport SiteLayout from \"../components/site-layout\";\nimport { IPageContext } from \"../types\";\nimport Resources from \"../components/resources\";\nimport { IMinimalFrontmatter, ITOCItem } from \"../types\";\nimport { Hyperlink } from \"./hyperlink\";\nimport { TagList } from \"./tag-list\";\n\ninterface IPageLayoutNav {\n  frontmatter: IMinimalFrontmatter | null | undefined;\n  siblings: {\n    readonly nodes: readonly {\n      readonly frontmatter: IMinimalFrontmatter | null | undefined;\n      readonly parent:\n        | {}\n        | {\n            readonly name: string;\n            readonly relativePath: string;\n            readonly relativeDirectory: string;\n          }\n        | null;\n    }[];\n  };\n  tableOfContents: Record<string, ITOCItem[]>;\n  pageContext: IPageContext;\n  useNextLink: boolean;\n  showSiblings?: boolean;\n  children: React.ReactNode;\n}\n\nconst PageLayoutNav: React.FC<IPageLayoutNav> = ({\n  frontmatter,\n  siblings,\n  tableOfContents,\n  pageContext,\n  children,\n  useNextLink = false,\n  showSiblings = true,\n}: IPageLayoutNav) => {\n  const currentSlug = frontmatter?.slug;\n  const pathDepth = pageContext.pathParts.length;\n  const isTopLevel = pathDepth === 2;\n  const tocLinks = tableOfContents.items\n    ? tableOfContents.items.map((item: ITOCItem) => {\n        const tocClass = !showSiblings ? \"\" : \"font-ui-3xs\";\n        return (\n          <a href={item.url} key={item.url} className={tocClass}>\n            {item.title}\n          </a>\n        );\n      })\n    : [];\n  let atCurrent = false;\n  let nextLink = null;\n  let siblingNodes = siblings.nodes;\n  const siblingLinks = siblingNodes\n    .map((node) => {\n      if (\n        node &&\n        node.frontmatter &&\n        node.frontmatter.slug &&\n        node.frontmatter.heading &&\n        node.parent &&\n        \"relativeDirectory\" in node.parent\n      ) {\n        const actualSlug = node.frontmatter.slug === \"index\" ? \"\" : node.frontmatter.slug;\n        if (isTopLevel) {\n          // If this is a top-level page, like Get Started, we actually want first-children\n          if (\n            node.parent.relativeDirectory.startsWith(pageContext.pathParts.join(\"/\").slice(1)) &&\n            node.parent.relativePath !== pageContext.filePath\n          ) {\n            if (node.frontmatter.link) {\n              return <Hyperlink href={node.frontmatter.link}>{node.frontmatter.heading}</Hyperlink>;\n            }\n            return <Link to={`/${node.parent.relativeDirectory}/${actualSlug}`}>{node.frontmatter.heading}</Link>;\n          } else {\n            return null;\n          }\n        }\n\n        if (node.frontmatter.slug === currentSlug && node.parent.relativePath === pageContext.filePath) {\n          atCurrent = true;\n          return (\n            <>\n              {showSiblings && (\n                <a href=\"#\" className=\"usa-current\" key=\"current\">\n                  {node.frontmatter.heading}\n                </a>\n              )}\n              {tocLinks.length > 0 && <SideNav items={tocLinks}></SideNav>}\n            </>\n          );\n        } else if (showSiblings) {\n          if (atCurrent) {\n            if (!node.frontmatter.link) {\n              nextLink = node.frontmatter;\n            }\n            atCurrent = false;\n          }\n          if (node.frontmatter.link) {\n            return <Hyperlink href={node.frontmatter.link}>{node.frontmatter.heading}</Hyperlink>;\n          } else {\n            return <Link to={`/${node.parent.relativeDirectory}/${actualSlug}`}>{node.frontmatter.heading}</Link>;\n          }\n        }\n      }\n    })\n    .filter((item) => !!item);\n\n  // This is honestly for the type checker; it should be obvious\n  // that nextLink is an IMinimalFrontmatter, but not to typescript\n  if (nextLink) {\n    nextLink = nextLink as IMinimalFrontmatter;\n  }\n\n  return (\n    <SiteLayout breadCrumbs={pageContext.breadCrumbs} pagePath={pageContext.pagePath}>\n      <Grid row gap={2} className=\"margin-bottom-4\">\n        <Grid tablet={{ col: 2 }}>\n          <div className=\"position-sticky top-0\">\n            <SideNav items={siblingLinks}></SideNav>\n            {frontmatter?.tags && <TagList tags={frontmatter.tags} />}\n          </div>\n        </Grid>\n        <Grid tablet={{ col: 10 }}>\n          <h1>{frontmatter?.heading}</h1>\n          {children}\n          {useNextLink && nextLink !== null && (\n            <span className=\"tfh-next-link\">\n              <Link to={`${pageContext.parentPath}/${nextLink.slug}`}>\n                <strong>Next: {nextLink.heading}</strong>\n              </Link>\n            </span>\n          )}\n        </Grid>\n      </Grid>\n      <Grid row className=\"tfh-resources-bar\">\n        <Grid col=\"fill\">\n          <hr />\n          <h3 className=\"font-ui-xl\">Resources</h3>\n          <Resources></Resources>\n        </Grid>\n      </Grid>\n    </SiteLayout>\n  );\n};\n\nexport const query = graphql`\n  fragment minimalFrontmatter on Mdx {\n    frontmatter {\n      slug\n      heading\n      meta_title\n      meta_description\n      promo_description\n      robots\n      canonical\n      link\n      tags\n    }\n  }\n  fragment currentPageWithLocalNav on Mdx {\n    ...minimalFrontmatter\n    tableOfContents(maxDepth: 2)\n    parent {\n      ... on File {\n        name\n        relativePath\n        relativeDirectory\n      }\n    }\n  }\n`;\n\nexport default PageLayoutNav;\n","var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nmodule.exports = kebabCase;\n"],"names":["_createMdxContent","props","React","wrapper","MDXLayout","Object","assign","_provideComponents","components","DefaultPageTemplate","_ref","data","children","pageContext","currentPage","frontmatter","siblings","tableOfContents","PageLayoutNav","useNextLink","MDXContent","SiteLayout","pagePath","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref2","_data$currentPage","SEO","useStaticQuery","CardGroup","allMarkdownRemark","edges","map","node","ResourceCard","key","id","TagList","tags","length","tagList","tag","urlTag","withPrefix","_kebabCase","Hyperlink","href","className","showSiblings","currentSlug","slug","isTopLevel","pathParts","tocLinks","items","item","tocClass","url","title","atCurrent","nextLink","siblingLinks","nodes","heading","parent","actualSlug","relativeDirectory","startsWith","join","slice","relativePath","filePath","link","Link","to","SideNav","filter","breadCrumbs","Grid","row","gap","tablet","col","parentPath","Resources","kebabCase","createCompounder","result","word","index","toLowerCase","module","exports"],"sourceRoot":""}